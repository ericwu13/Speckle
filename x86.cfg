#------------------------------------------------------------------------------
# SPEC CPU2017 config file for: gcc / g++ / gfortran on Linux x86
#------------------------------------------------------------------------------
# 
# Usage: (1) Copy this to a new name
#             cd $SPEC/config
#             cp Example-x.cfg myname.cfg
#        (2) Change items that are marked 'EDIT' (search for it)
# 
# SPEC tested this config file with:
#    Compiler version(s):    4.4.7, 4.9.2, 5.2.0, 6.3.0
#    Operating system(s):    Oracle Linux Server 6.5 and 7.2 / 
#                            Red Hat Enterprise Linux Server 6.5 and 7.2
#    Hardware:               Xeon 
#
# If your system differs, this config file might not work.
# You might find a better config file at http://www.spec.org/cpu2017/results
#
# Known Limitations with GCC 4 
#
#   (1) Possible problem: compile time messages
#                             error: unrecognized command line option '...'
#      Recommendation:    Use a newer version of the compiler.
#                         If that is not possible, remove the unrecognized 
#                         option from this config file.
#
#   (2) Possible problem: run time errors messages 
#           527.cam4_r or 627.cam4_s    *** Miscompare of cam4_validate.txt    
#      Recommendation: Use a newer version of the compiler.
#                      If that is not possible, try reducing the optimization.
#
# Compiler issues: Contact your compiler vendor, not SPEC.
# For SPEC help:   http://www.spec.org/cpu2017/Docs/techsupport.html
#------------------------------------------------------------------------------


#--------- Label --------------------------------------------------------------
# Arbitrary string to tag binaries 
#                  Two Suggestions: # (1) EDIT this label as you try new ideas.
%define label x86                # (2)      Use a label meaningful to *you*.


#--------- Preprocessor -------------------------------------------------------
%ifndef %{bits}                # EDIT to control 32 or 64 bit compilation.  Or, 
%   define  bits        64     #      you can set it on the command line using:
%endif                         #      'runcpu --define bits=nn'

%ifndef %{build_ncpus}         # EDIT to adjust number of simultaneous compiles.
%   define  build_ncpus 8      #      Or, you can set it on the command line: 
%endif                         #      'runcpu --define build_ncpus=nn'

# Don't change this part.
%define    os           LINUX
%if %{bits} == 64
%   define model        -m64
%elif %{bits} == 32
%   define model        -m32
%else
%   error Please define number of bits - see instructions in config file
%endif


#--------- Global Settings ----------------------------------------------------
# For info, see:
#            https://www.spec.org/cpu2017/Docs/config.html#fieldname   
#   Example: https://www.spec.org/cpu2017/Docs/config.html#tune        

command_add_redirect = 1
flagsurl             = $[top]/config/flags/gcc.xml
ignore_errors        = 1
iterations           = 1
label                = %{label}-m%{bits}
line_width           = 1020
log_line_width       = 1020
makeflags            = --jobs=%{build_ncpus} 
mean_anyway          = 1
output_format        = txt,html,cfg,pdf,csv
preenv               = 1
reportable           = 0
tune                 = base


#--------- How Many CPUs? -----------------------------------------------------
# Both SPECrate and SPECspeed can test multiple chips / cores / hw threads
#    - For SPECrate,  you set the number of copies.
#    - For SPECspeed, you set the number of threads. 
# See: https://www.spec.org/cpu2017/Docs/system-requirements.html#MultipleCPUs
#
#    q. How many should I set?  
#    a. Unknown, you will have to try it and see!
#
# To get you started, some suggestions:
#
#     copies - This config file defaults to testing only 1 copy.   You might
#              try changing it to match the number of cores on your system, 
#              or perhaps the number of virtual CPUs as reported by:
#                     grep -c processor /proc/cpuinfo
#              Be sure you have enough memory.  See:
#              https://www.spec.org/cpu2017/Docs/system-requirements.html#memory
#
#     threads - This config file sets a starting point.  You could try raising 
#               it.  A higher thread count is much more likely to be useful for
#               fpspeed than for intspeed.
#
intrate,fprate:
   copies           = 1   # EDIT to change number of copies (see above)
intspeed,fpspeed:
   threads          = 4   # EDIT to change number of OpenMP threads (see above)


#------- Compilers ------------------------------------------------------------
default:
#                    EDIT: the directory where your compiler is installed
%ifndef %{gcc_dir}
%   define  gcc_dir        /opt/rh/devtoolset-8/root/usr
%endif

# EDIT if needed: the preENV line adds library directories to the runtime
#      path.  You can adjust it, or add lines for other environment variables. 
#      See: https://www.spec.org/cpu2017/Docs/config.html#preenv
#      and: https://gcc.gnu.org/onlinedocs/gcc/Environment-Variables.html
   preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64
  #preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64:%{ENV_LD_LIBRARY_PATH}
   SPECLANG                = %{gcc_dir}/bin/
   CC                      = $(SPECLANG)gcc     -std=c99   %{model}
   CXX                     = $(SPECLANG)g++                %{model}
   FC                      = $(SPECLANG)gfortran           %{model}
   # How to say "Show me your version, please"
   CC_VERSION_OPTION       = -v
   CXX_VERSION_OPTION      = -v
   FC_VERSION_OPTION       = -v

default:
%if %{bits} == 64
   sw_base_ptrsize = 64-bit
   sw_peak_ptrsize = 64-bit
%else
   sw_base_ptrsize = 32-bit
   sw_peak_ptrsize = 32-bit
%endif


#--------- Portability --------------------------------------------------------
default:               # data model applies to all benchmarks
%if %{bits} == 32
    # Strongly recommended because at run-time, operations using modern file 
    # systems may fail spectacularly and frequently (or, worse, quietly and 
    # randomly) if a program does not accommodate 64-bit metadata.
    EXTRA_PORTABILITY = -D_FILE_OFFSET_BITS=64
%else
    EXTRA_PORTABILITY = -DSPEC_LP64
%endif

# Benchmark-specific portability (ordered by last 2 digits of bmark number)

500.perlbench_r,600.perlbench_s:  #lang='C'
%if %{bits} == 32
%   define suffix IA32
%else
%   define suffix X64
%endif
   PORTABILITY    = -DSPEC_%{os}_%{suffix}

521.wrf_r,621.wrf_s:  #lang='F,C'
   CPORTABILITY  = -DSPEC_CASE_FLAG 
   FPORTABILITY  = -fconvert=big-endian

523.xalancbmk_r,623.xalancbmk_s:  #lang='CXX'
   PORTABILITY   = -DSPEC_%{os}

526.blender_r:  #lang='CXX,C'
   PORTABILITY   = -funsigned-char -DSPEC_LINUX

527.cam4_r,627.cam4_s:  #lang='F,C'
   PORTABILITY   = -DSPEC_CASE_FLAG

628.pop2_s:  #lang='F,C'
   CPORTABILITY    = -DSPEC_CASE_FLAG
   FPORTABILITY    = -fconvert=big-endian


#-------- Tuning Flags common to Base and Peak --------------------------------

#
# Speed (OpenMP and Autopar allowed)
#
%if %{bits} == 32
   intspeed,fpspeed:
   #
   # Many of the speed benchmarks (6nn.benchmark_s) do not fit in 32 bits
   # If you wish to run SPECint2017_speed or SPECfp2017_speed, please use
   #
   #     runcpu --define bits=64
   #
   fail_build = 1
%else
   intspeed,fpspeed:
      EXTRA_OPTIMIZE = -fopenmp -DSPEC_OPENMP
   fpspeed:
      #
      # 627.cam4 needs a big stack; the preENV will apply it to all 
      # benchmarks in the set, as required by the rules.  
      #
      preENV_OMP_STACKSIZE = 120M
%endif


#--------  Baseline Tuning Flags ----------------------------------------------
#
# EDIT if needed -- Older GCC might not support some of the optimization
#                   switches here.  See also 'About the -fno switches' below.
#
default=base:         # flags for all base 
   OPTIMIZE       = -g -O2 -march=x86-64 -fno-unsafe-math-optimizations

intrate,intspeed=base: # flags for integer base
%if %{bits} == 32                    
    EXTRA_COPTIMIZE = -fgnu89-inline -fno-strict-aliasing 
%else                                
    EXTRA_COPTIMIZE = -fno-strict-aliasing 
    LDCFLAGS        = -z muldefs     
%endif                               
# Notes about the above
#  - 500.perlbench_r/600.perlbench_s needs -fno-strict-aliasing.
#  - 502.gcc_r/602.gcc_s             needs -fgnu89-inline or -z muldefs
#  - For 'base', all benchmarks in a set must use the same options.   
#  - Therefore, all base benchmarks get the above.  See:
#       www.spec.org/cpu2017/Docs/runrules.html#BaseFlags  
#       www.spec.org/cpu2017/Docs/benchmarks/500.perlbench_r.html
#       www.spec.org/cpu2017/Docs/benchmarks/502.gcc_r.html


#--------  Peak Tuning Flags ----------------------------------------------
default=peak:
   basepeak = yes  # if you develop some peak tuning, remove this line.
   #
   # -----------------------
   # About the -fno switches
   # -----------------------
   #
   # For 'base', this config file (conservatively) disables some optimizations.
   # You might want to try turning some of them back on, by creating a 'peak' 
   # section here, with individualized benchmark options:
   #
   #        500.perlbench_r=peak:
   #           OPTIMIZE = this
   #        502.gcc_r=peak:
   #           OPTIMIZE = that 
   #        503.bwaves_r=peak:
   #           OPTIMIZE = other   .....(and so forth)
   #
   # If you try it:
   #   - You must remove the 'basepeak' option, above.
   #   - You will need time and patience, to diagnose and avoid any errors.
   #   - perlbench is unlikely to work with strict aliasing 
   #   - Some floating point benchmarks may get wrong answers, depending on:
   #         the particular chip 
   #         the version of GCC 
   #         other optimizations enabled
   #         -m32 vs. -m64
   #   - See: http://www.spec.org/cpu2017/Docs/config.html
   #   - and: http://www.spec.org/cpu2017/Docs/runrules.html


#------------------------------------------------------------------------------
# Tester and System Descriptions - EDIT all sections below this point              
#------------------------------------------------------------------------------
#   For info about any field, see
#             https://www.spec.org/cpu2017/Docs/config.html#fieldname 
#   Example:  https://www.spec.org/cpu2017/Docs/config.html#hw_memory  
#-------------------------------------------------------------------------------

#--------- EDIT to match your version -----------------------------------------
default:
   sw_compiler001   = C/C++/Fortran: Version 6.2.0 of GCC, the
   sw_compiler002   = GNU Compiler Collection

#--------- EDIT info about you ------------------------------------------------
# To understand the difference between hw_vendor/sponsor/tester, see:
#     https://www.spec.org/cpu2017/Docs/config.html#test_sponsor
intrate,intspeed,fprate,fpspeed: # Important: keep this line
   hw_vendor          = My Corporation
   tester             = My Corporation
   test_sponsor       = My Corporation
   license_num        = nnn (Your SPEC license number) 
#  prepared_by        = # Ima Pseudonym                       # Whatever you like: is never output


#--------- EDIT system availability dates -------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
   hw_avail           = # Nov-2099                            # Date of LAST hardware component to ship
   sw_avail           = # Nov-2099                            # Date of LAST software component to ship

#--------- EDIT system information --------------------------------------------
intrate,intspeed,fprate,fpspeed: # Important: keep this line
                        # Example                             # Brief info about field
#  hw_cpu_name        = # Intel Xeon E9-9999 v9               # chip name
   hw_cpu_nominal_mhz = # 9999                                # Nominal chip frequency, in MHz
   hw_cpu_max_mhz     = # 9999                                # Max chip frequency, in MHz
#  hw_disk            = # 9 x 9 TB SATA III 9999 RPM          # Size, type, other perf-relevant info
   hw_model           = # TurboBlaster 3000                   # system model name
#  hw_nchips          = # 99                                  # number chips enabled
   hw_ncores          = # 9999                                # number cores enabled
   hw_ncpuorder       = # 1-9 chips                           # Ordering options
   hw_nthreadspercore = # 9                                   # number threads enabled per core
   hw_other           = # TurboNUMA Router 10 Gb              # Other perf-relevant hw, or "None"

#  hw_memory001       = # 999 GB (99 x 9 GB 2Rx4 PC4-2133P-R, # The 'PCn-etc' is from the JEDEC 
#  hw_memory002       = # running at 1600 MHz)                # label on the DIMM.

   hw_pcache          = # 99 KB I + 99 KB D on chip per core  # Primary cache size, type, location
   hw_scache          = # 99 KB I+D on chip per 9 cores       # Second cache or "None"
   hw_tcache          = # 9 MB I+D on chip per chip           # Third  cache or "None"
   hw_ocache          = # 9 GB I+D off chip per system board  # Other cache or "None"

   fw_bios            = # American Megatrends 39030100 02/29/2016 # Firmware information
#  sw_file            = # ext99                               # File system
#  sw_os001           = # Linux Sailboat                      # Operating system
#  sw_os002           = # Distribution 7.2 SP1                # and version
   sw_other           = # TurboHeap Library V8.1              # Other perf-relevant sw, or "None"
#  sw_state           = # Run level 99                        # Software state.

# Note: Some commented-out fields above are automatically set to preliminary 
# values by sysinfo
#       https://www.spec.org/cpu2017/Docs/config.html#sysinfo
# Uncomment lines for which you already know a better answer than sysinfo 

__HASH__
503.bwaves_r=base=x86-m64:
# Last updated 2021-04-02 01:44:22
opthash=68f608cec47193741e47a239c81d0dc2f4a52379a0a820ddfce3e16158419c55
baggage=
compiler_version=\
@eNqNVF1P2zAUfe+v8CMIHFOKUFcpD1vHNqRqRV3ZHiPHuUkuuHbmD0j59dy0DQEJjb209cn9OOf4\
pOzbPPt9tfp1vfyZLW/W9DUb3Xo0Fcsj6sDRMN+A8slovlwsrubr7Pt8ngrbBOFqUcBDsFZ7CHwq\
nLVBRO9EjkZUpXXBSfPStlgvsz+rzzc3V6sP2jXm0IISlVKinV5mlxfcQVHLwDWa2Iqp0MHyRyeb\
BtxoLV0FYcbeqRzNrSmxioSxRwz1jCWJUD3GOAcjcw08p82eyDYDpKWpoqzAp+pUnZycHtSc0mYq\
ahyU2P5bBpVtpCnQfaDW19KBoFJqQFPa/+3oaqml08XzSIJ0WofQzISg0xNqLZO9F4mymxdsULib\
UgznUDuQhU8b67EdYFWDuqc4pA40SP/KtU3UAemuehJ+6wNs+NMeOhRlmWplJgO0GAgt0O/txTya\
RzQFh1ZBE9AaPzRVJvJo8G8EbvM7UOHVvaC5B8e7bBYci343RYXcvrOOP4DzNI1bo7f900NTLT2x\
DFsNKW3oHxZQSlLSUfKhUG3LZY4pDbzgZFwjA9LegUCjY4VmOKPBUNIHl87Jl43odSp2JOk69z/E\
l9vrxdcu1HyaTJIxPz8bfzqbjMeCNPL3ck5DaLwPUuu31m2a9q1Z2OWMfOJlNKozs+cRoiGxYMCh\
6jHpVJ1NzlNayS8vCN3RS997f9a7TLCNLUDP2C4ZIxLADiaznRDWC2FHKwrUDxn2OJ8csyP6szhm\
o2cD9Ydj
compile_options=\
@eNq1UltvgjAUfudXNLxXtswsk4iJIDo2pI1Asu2FIBbtppS0xW3++lW8Zsku0Y0XTvqd0+9yGrAC\
LtIXktM5AayUlBXC1ITkNJMJr4oJ5cmScJq/W/qlrqlSqBZLv2i0Lpq6pvUxNoEuSpKVJYC9ELuO\
+gU9144HAL5uj5JuHKEkjDEeuWGYIOwGQ7zDfHzdBG3BKp6RDoBsXzfysqQrMmnkrTddUzwOjvt+\
dxBa+iemGrXdwLlNlKBdz7fs9Yj7EI26CUajqGt7vhc97m6uRemag4Zre4YKxuAzY0KWkrG5IBLe\
GJwxaVSCG2NaGNOcccnTAhw+uFC2YLY2tM21wQCcAoiuFJbybGYVqaRLAmBeMFgVIs2JAuQMrvsX\
dJXWUxtYckLgnLESLkkmGVe57HNSOk3Qd6zTdW5uQPYdwpGK4Fj0T8EjE6ghb+g9uQo9wd6X/n61\
Id8L7s/a0Kb6S90HgjYbP6tT0QHHrPtoAahz93tnbe4/F1CrQ/H6TRw9iA9q8k4G
exehash=f9f8636aff0029eaf0b63d23aea8de4e4cd9ce5897e4f1200b48fe9e203c42b9

507.cactuBSSN_r=base=x86-m64:
# Last updated 2021-04-02 01:44:45
opthash=91eefba0d27f9eae0bcd7c7201f214a9c96d75f6b71f4c3e2e3829617826a0e3
baggage=
compiler_version=\
@eNrtVF1P2zAUfe+v8COouKYUoa5SHraMbUjVirqy8RY5zk1ywbUz24HAr+f2IxS0akza3paXpj65\
X+f45rD4+jpOvp/Pv13MviazywU9Jj0W78E+/YpdeTQFS2vUgaNhvgLlB714Np2ex4vkcxxHwlZB\
uFJkcBes1R4CHwtnbRC1dyJFI4p+/zljupglP+bvLy/P529kakyhASUKpUQzPkvOTrmDrJSBazR1\
I8ZCB8vvnawqcL2FdAWECdsT2YutybGoCWP3GMoJGwyEajHGORiZauApdfaB6u0gLU1RywJ8pI5U\
v3+UW0cB5og6U1DlIMfm9zQobClNhu4Ntr6UDgSFUgKa3P5pxiqWUla8eFoTIR2VIVQTIej0iFrL\
wUaLgbLLZ2zHcF0l251D6UBmPqqsx2YHqxLULW1C5ECD9C9UW9Y6IN1VO4R/8AGW/HEDbYOSRDUy\
kQEaDIRm6DfyYlqbezQZh0ZBFdAav0sqTM1rgz9r4Da9ARVe3AuaW3B8tZYZx6ztTatCat9Yx+/A\
earGrdEP7dttUik9TRkeNETUoX2ZQS6JyWokHzLVNFymGFHBU07CVTIg9d0NUOm6QLM7o8GQ0w+X\
zsnnjuh1JNZD0nVu/ogPVxfTj6ul5uPBaDDkJ8fDd8ej4VAQR75vz6kIlfdBav1aumXVvBYLV3tG\
OvG8NmolZjtHqA2RBQMOVYtJp8pkdBJRS352Suh6vGjf97NY7wRb2gz0hK03o0cE2FZktibCWiLs\
YE4L9UWGDc5Hh+yAfOKQ/RsvUarzks5LOi/pvOTvvWT7CXaG0hlKZyj/uaE8AdkFkgQ=
compile_options=\
@eNrVVdFO2zAUfc9XWH5FJiAQWiuClDgpy0hjq0mkbi9RSB1q1trIcSrB189NViBTEaxQtOXFdu61\
77nnHNmxFGhZ/GQVXzAg7zSXoh5atVa81LlqxIyrfMUUr+4deAwtM61NigOPDgdHp9CyMBnTIYC2\
2WqruT1jKy3lomYafbGVlNpuamVfc2HfHByAPz60PDsFqARIbiofSoD8hAbYDLEfeNnl73XuZinJ\
k4zSSZAkOaFBPKYAhVyUi2bGTBbGxA/aMb3K/TBxvSjITXI6CXHqHAN0AxA5MTULVc4dUWi+Mtsq\
IVEj6qJiJqDnaI1jyR+KFg3o4loxhhZS3qEVK7VU/IE9tdChi6jpBJzXslElu4AWHgI8nTq707I5\
gnjfCE0d2GMJWoZyTLNR5F4mJtZnrI16QYy/5r2ErRQ+SzbVNvlvpxVaZAgMwnAc/gjMzo8kucUW\
TNOJm1MySV0vjML0+2M7a87hX/ivLDt2az1zysFgT/7bi8te9Rp2dmegO+EzjfaSzf4jM1VSaVWI\
Vy+zpxZ3aOZFX/TEH71N/O2IuxM+UfzRFvFH/4T4URhfvesl62b7uQDO5fWt+Vtf9Ko+agVAK2Tk\
v+vJ2acALTqSrU32zGG/AA0flCY=
exehash=3e403c1aa998d00b5d65f489ad2ccffc0a3aedd7bce0a5a32deb9cea8f9a0c92

508.namd_r=base=x86-m64:
# Last updated 2021-04-02 01:44:54
opthash=04a89d32b4bad86edd64e11fca3a791e9cf22889bfd1ee85480daabc9d2b782b
baggage=
compiler_version=\
@eNqNVF1P2zAUfe+v8COouKYUoa5SHrYMbUjVirqy8RY5zk1ywbUzf0DKr99NSwhIaOwliY/v1zk+\
Dktvb9Ps1+X659XqR7a63tBrMbrxaCqWR9SBo2G+AeUno3S1XF6mm+xbmibCNkG4WhTwEKzVHgKf\
C2dtENE7kaMR1Xj8krHcrLLf68/X15frDzI15tCCEpVSop1fZBfn3EFRy8A1mtiKudDB8kcnmwbc\
aCNdBWHB3okcpdaUWEXC2COGesEmE6F6jHEORuYaeE6dfaB6A6SlqaKswCfqRI3HJ6V1FGBOqDMF\
NQ5KbP9Ng8K20hToPmDra+lAUCgloCnt/2Z0sZTS8eJ5JEI6qUNoFkLQ6gm1lpODFhNlty/YwHBf\
pRjWoXYgC5801mM7wKoGdU9OSBxokP6VatuoA9JZ9UP4nQ+w5U8H6Dkoy1QrMxmgxUBogf4gL+bR\
PKIpOLQKmoDW+CGpMpFHg38icJvfgQqvzgXNPTje2bLgWPS9ySqk9p11/AGcp2rcGr3rd5+Taulp\
yrDTkFCHfrOAUhKTbiQfCtW2XOaYUMFzTsI1MiD1HQZodKzQDGs0GEp6cOmcfOmIXidiPyQd5+FD\
fLm5Wn7tTM3nk9lkys9Op59OZ9OpII78PZ9TESrvg9T6rXTbpn0rFnY+I514GY3qxOznCNEQWTDg\
UPWYdKrOZmcJteQX54Tux0veuz+bvSfY1hagF2zvjBERYM8isz0R1hNhR2sy1HcZDjifHbMj+k8c\
s9Ffs2SFag==
compile_options=\
@eNq1Ul1PwjAUfd+vuOkrqdNIjBJnso+K07E2bEvQl2aOAlVYTVdI5Ndbhqj4pmhfetN7e8+559xU\
1XhRPouJnAtQL0aquuk5jdGyMlwv67HUfCW0nLx66AQ5NmxsiYeOjy6Ou8hxQjpgPUCu/erqmTsW\
K6PUvBEGn7taKeMuG+0+ytqddjrw7eDFWRdwBVjtkI8U4ChjJLRXGpGg6MMm8gcRj+LMDxLCs4y8\
13C/yCnPCsaGJMs4ZSQdMMBTwPTU9i51NfPq0siVADypFV7WTTkRNmFmeIO3kOuyRYVt3mgh8Fyp\
F7wSlVFarsUn1S1iwixjuGzUUlfiCjlhD8LRyPv9+LsWNLilLPfQnhrIsdKGrLhO/H5mc/vKtNmA\
pOENtw0+an4iFnJoDyxuPIgfiP38l9K19MgoH/qc0WHuB3ES5/e7KVolkZPE6d1B27ON/sVyuFSP\
T/a1udpD/XAHoDUviQ6y/z8NaNnRYrNWX3bqDVFRMR4=
exehash=11dd1acfd54c1dbb7463efd115e75ca609c905b1fc31ea2f77a51ba49136dedd

